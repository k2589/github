#Использовать ".."
#Использовать asserts

Перем Токен;

Процедура ПередЗапускомТеста() Экспорт

	ИмяФайла = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "token.txt");
	Файл = Новый Файл(ИмяФайла);
	Если Не Файл.Существует() Тогда
		ВызватьИсключение("Не найден файл с токеном. Файл должен находится по пути ./fixtures/token.txt");
	КонецЕсли;

	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.Прочитать(ИмяФайла);
	Токен = ТекстовыйДокумент.ПолучитьТекст();
	
	ТекстовыйДокумент = Неопределено;

КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт

КонецПроцедуры

&Тест
Процедура Тест_ПроверитьПолучениеПользователя() Экспорт

	Клиент = Новый КлиентGitHub();
	Клиент.ИспользоватьТокен(Токен);

	ИмяПользователя = "freeCodeCamp";

	Пользователь = Клиент.ПолучитьПользователя(ИмяПользователя);
	Ожидаем.Что(Пользователь, "Пользователь guthib получен по имени").Заполнено();

	Пользователь = Клиент.ПолучитьПользователя(Новый ПользовательGitHub(ИмяПользователя));
	Ожидаем.Что(Пользователь, "Пользователь guthib получен по объекту").Заполнено();
	Ожидаем.Что(Пользователь.Логин, "Имя пользователя github совпадает с полученным").Равно(ИмяПользователя);

КонецПроцедуры

&Тест
Процедура Тест_ПроверитьПолучениеРепозитория() Экспорт

	Клиент = Новый КлиентGitHub(Токен);

	ИмяПользователя = "freeCodeCamp";
	ИмяРепозитория = "freeCodeCamp";
	Репозиторий = Клиент.ПолучитьРепозиторий(ИмяПользователя, ИмяРепозитория);
	Ожидаем.Что(Репозиторий, "Репозиторий guthib получен по логину и имени").Заполнено();

КонецПроцедуры

&Тест
Процедура Тест_ПроверитьПолучениеСотрудниковРепозитория() Экспорт

	Клиент = Новый КлиентGitHub(Токен);

	ИмяПользователя = "oscript-library";
	ИмяРепозитория = "add";
	Сотрудники = Клиент.ПолучитьСотрудниковРепозитория(ИмяПользователя, ИмяРепозитория);
	Ожидаем.Что(Сотрудники.Количество(), "Найдены collaborators по логину и имени репозитория").Больше(0);

КонецПроцедуры

Токен = "";