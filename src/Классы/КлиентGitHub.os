#Использовать 1connector

Перем ТокенАвторизации;
Перем ВерсияAPI;

Перем Сервер;

Процедура ПриСозданииОбъекта(пТокен = "")

	Если ЗначениеЗаполнено(пТокен) Тогда
		ТокенАвторизации = пТокен;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИспользоватьТокен(Знач Токен) Экспорт
	ТокенАвторизации = Токен;
КонецПроцедуры

Функция ПолучитьПользователя(Знач ИсходящееЗначение) ЭКспорт

	Перем Пользователь;

	Если ТипЗнч(ИсходящееЗначение) = Тип("Строка") Тогда
		Пользователь = Новый ПользовательGitHub(ИсходящееЗначение);
	ИначеЕсли ТипЗнч(ИсходящееЗначение) = Тип("ПользовательGitHub") Тогда
		Пользователь = ИсходящееЗначение;
	Иначе
		ВызватьИсключение ("Тип исходящего значения не поддерживается");
	КонецЕсли;

	СсылкаЗапроса = "/user";
	Если ЗначениеЗаполнено(Пользователь.Логин) Тогда
		СсылкаЗапроса = СсылкаЗапроса + "s/" + Пользователь.Логин;
	КонецЕсли;
	Ответ = КоннекторHTTP.Get(Сервер + СсылкаЗапроса,, Новый Структура("Заголовки", Заголовки()));

	Если Ответ.КодСостояния = 200 Тогда
		Данные = Ответ.Json();
		Пользователь.Заполнить(Данные);
	Иначе
		Пользователь = Неопределено;
		Сообщить(Ответ.Текст());	
	КонецЕсли;

	Возврат Пользователь;

КонецФункции

Функция ПолучитьРепозиторий(Знач Пользователь, Знач ИмяРепозитория) Экспорт

	Перем Репозиторий;
	Перем ИмяПользователя;

	Если ТипЗнч(Пользователь) = Тип("ПользовательGitHub") Тогда
		ИмяПользователя = Пользователь.Логин;
	ИначеЕсли ТипЗнч(Пользователь) = Тип("Строка") Тогда
		ИмяПользователя = Пользователь;
	Иначе
		ВызватьИсключение("Тип параметра Пользователь не поддерживается");
	КонецЕсли;

	Репозиторий = Новый РепозиторийGitHub();

	СсылкаЗапроса = СтрШаблон("/repos/%1/%2", ИмяПользователя, ИмяРепозитория);
	Ответ = КоннекторHTTP.Get(Сервер + СсылкаЗапроса,, Новый Структура("Заголовки", Заголовки()));
	Если Ответ.КодСостояния = 200 Тогда
		Данные = Ответ.Json();
		Репозиторий.Заполнить(Данные);
	Иначе
		Репозиторий = Неопределено;
		Сообщить(Ответ.Текст());	
	КонецЕсли;

	Возврат Репозиторий;

КонецФункции

Функция ПолучитьСотрудниковРепозитория(Знач Пользователь, Знач ИмяРепозитория) Экспорт

	Перем Результат;
	Перем ИмяПользователя;

	Если ТипЗнч(Пользователь) = Тип("ПользовательGitHub") Тогда
		ИмяПользователя = Пользователь.Идентификатор;
	ИначеЕсли ТипЗнч(Пользователь) = Тип("Строка") Тогда
		ИмяПользователя = Пользователь;
	Иначе
		ВызватьИсключение("Тип параметра Пользователь не поддерживается.");
	КонецЕсли;

	Результат = Новый Массив;

	СсылкаЗапроса = СтрШаблон("/repos/%1/%2/collaborators", ИмяПользователя, ИмяРепозитория);
	Ответ = КоннекторHTTP.Get(Сервер + СсылкаЗапроса,, Новый Структура("Заголовки", Заголовки()));
	Если Ответ.КодСостояния = 200 Тогда
		Данные = Ответ.Json();
		Для Каждого ЭлементДанных Из Данные Цикл
			Пользователь = Новый ПользовательGitHub();
			Пользователь.Заполнить(ЭлементДанных);
			Результат.Добавить(Пользователь);
		КонецЦикла;
	Иначе
		Сообщить(Ответ.Текст());	
	КонецЕсли;

	Возврат Результат;

КонецФункции

Функция Заголовки()
	ЗаголовкиЗапроса = Новый Соответствие;
	ЗаголовкиЗапроса.Вставить("Accept", СтрШаблон("application/vnd.github.v%1+json", ВерсияAPI));
	ЗаголовкиЗапроса.Вставить("User-Agent", "oscript-githubapi");
	ЗаголовкиЗапроса.Вставить("Authorization", СтрШаблон("token %1", ТокенАвторизации));
	Возврат ЗаголовкиЗапроса;
КонецФункции

ТокенАвторизации = "";
ВерсияAPI = "3";

Сервер = "https://api.github.com";